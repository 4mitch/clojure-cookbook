=== Create an Executable JAR File
[role="byline"]
by Alan Busby

==== Problem

You want to create an executable JAR.

==== Solution

Use the +Leiningen+ build tool to package your application as an
_uberjar_, a JAR file that includes an application and all of its
dependencies.

To follow along with this recipe, create a new +Leiningen+ project:

[source,console]
----
$ lein new foo
----

Configure the project to be executable by adding +:main+ and +:aot+
parameters to the project's _+project.clj+_ file.

._project.clj_
[source,clojure]
----
(defproject foo "0.1.0-SNAPSHOT"
  :description "FIXME: write description"
  :url "http://example.com/FIXME"
  :license {:name "Eclipse Public License"
            :url "http://www.eclipse.org/legal/epl-v10.html"}
  :dependencies [[org.clojure/clojure "1.5.1"]]
  :main foo.core
  :aot :all)
----

To finish making the project executable, add a +-main+ function and
+:gen-class+ declaration to _src/foo/core.clj_. Remove the existing
+foo+ function.

._src/foo/core.clj_
[source,clojure]
----
(ns foo.core
  (:gen-class))

(defn -main  [& args]
  (->> args
       (interpose " ")
       (apply str)
       (println "Executed with the following args: ")))
----

Run the application using the +lein run+ command to verify it is
functioning correctly:

[source,console]
----
$ lein run 1 2 3
----

To package the application with all of its dependencies included,
invoke +lein uberjar+.

[source,console]
----
$ lein uberjar
Created /tmp/foo/target/uberjar/foo-0.1.0-SNAPSHOT.jar
Created /tmp/foo/target/foo-0.1.0-SNAPSHOT-standalone.jar
----

Execute the generated _target/foo-0.1.0-SNAPSHOT-standalone.jar_ JAR file by
passing it as the +-jar+ option to the +java+ executable.

[source,console]
----
$ java -jar target/foo-1.0.0-standalone.jar 1 2 3
Executed with the following args:  1 2 3
----

==== Discussion

Executable jar files provide an excellent method to package a program
so it can be provided to users, called by cronjobs, combined with
other UNIX tools, or used in any other scenario where command-line
invocation is useful.

Under the hood, an executable jar is like any other jar file in that
it contains a collection of program resources such as class files,
Clojure source files, classpath resources, etc. Additionally,
executable jars contain metadata indicating which class contains the
+main+ method as a +Main-Class+ tag in its internal manifest file.

A Leiningen uberjar is a jar file that contains not only your program,
but all the dependencies bundled in as well. When Leiningen builds an
uberjar, it can detect from the +:main+ entry in +project.clj+ that
your program supplies a +main+ function, and writes an appropriate
manifest that will ensure that the emitted jar file is executable.

The +:gen-class+ in your namespace, and the +:aot+ Leiningen option
are required to precompile your Clojure source file into a JVM class
file, since the "Main-Class" manifest entry doesn't know how to
reference or compile Clojure source files.

==== See Also

* Using Leiningen
* Running Clojure Programs
* Ahead-of-time Compilation
